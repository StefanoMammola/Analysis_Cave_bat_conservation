# packages

library(tidyverse)
library(suncalc)
library(PerformanceAnalytics)
library(lme4)
library(dplyr)
library(DHARMa)
library(sjPlot)
library(ggcorrplot)
library(ggplot2)
library(funModeling) 
library(Hmisc)
library(glmmTMB)
library(mgcv)
library(gratia)
library(Information)
library(data.table)
library(caret)

setwd("~/MASTER THESIS/data")


abin <- fread("Abin_plotdata_220203rebecca.csv")

# deleted 27 rows from dataset because of double entry with different Stand Age estimates for plot

abin <- abin[-which(duplicated(abin$ProvytaRefID2)), ]

dim(abin)

# some polishing:

# subset and remove plots without pines (n=13835)

dat <-
  abin %>%
  dplyr::filter(NrofPines != 0) %>%
  mutate(
    across(c(NrofPines, AnnualPineDamage, UndamagedPine), as.integer),
    across(c(Vegclass, RegenTree), as.factor))
dim(dat)

# drop rows with Vegclass$Impediment level (66 rows) since pine here doesn't grow

dat <- subset(dat, Vegclass != "Impediment")

dim(dat)

# remove county of Gotland as there are no moose here (339 plots removed)

dat <- subset(dat, MMAName != "Gotland_1")
dim(dat)

# final size of dataset after polishing: 22987    31

str(dat)

# change reference level from "Middle" (default) o "Poor" in vegclass

dat <- within(dat, Vegclass <- relevel(Vegclass, ref = "Poor"))


# mmaID has 80 levels while MMAnames has 79: why?

dat[, .SD[1], by=mmaID] %>% 
  .[, .N, by=MMAName]

# Mellersta names shows up twice but actually the counties differ, one Mellersta is in Skane and one is in Vasterbotten.
# so use the MMAid and not the MMANAme as random effects


dat$mmaID <- as.factor(dat$mmaID)   # 79
dat$StandID <- as.factor(dat$StandID) # 3609
dat$SquareRefID <- as.factor(dat$SquareRefID) # 3086
dat$MMAnr <- as.factor(dat$MMAnr)              # 13
dat$CountyName <- as.factor(dat$CountyName)   #19
dat$Countynr <- as.factor(dat$Countynr) # 19
dat$MMAName <- as.factor((dat$MMAName))  # 78

str(dat)

dat[, .SD[1], by=mmaID] %>% 
  .[, .N, by=MMAName]


# scaling 
dat$TreeHeight_sc <- scale(dat$TreeHeight,center = TRUE, scale = TRUE)
dat$NrofBirch_sc <- scale(dat$NrofBirch,center = TRUE, scale = TRUE)
dat$NrofPines_sc <- scale(dat$NrofPines,center = TRUE, scale = TRUE)
dat$MoosePellets_sc <- scale(dat$MoosePellets,center = TRUE, scale = TRUE)
dat$DeerPellets_sc <- scale(dat$DeerPellets,center = TRUE, scale = TRUE)
dat$NrofRase_sc <- scale(dat$NrofRase,center = TRUE, scale = TRUE)
dat$CoordEast_sc <- scale(dat$CoordEast,center = TRUE, scale = TRUE)
dat$CoordNorth_sc <- scale(dat$CoordNorth,center = TRUE, scale = TRUE)

# now divide dataset in 3 regions:

# svealand <- Countynr == c(3,4,17,18,19,20)
# gotaland <- Countynr == c(5,6,7,8,9,10,12,13,14)
# norrland <-  Countynr == c(21 ,22,23 ,24,25)

dat[dat$Countrynr == c(3,4,17,18,19,20),"region"] <- svealand
dim(svealand) # 5477 plots

dat[dat$Countrynr == c(5,6,7,8,9,10,12,13,14),"region"] <- gotaland
dim(gotaland) # 3962 plots

dat[dat$Countrynr == c(21,22,23,24,25),"region"] <- norrland
dim(norrland) # 13548 rows/plots


# using individual MMA ids to see how damage level varies across them

mma.predicted <- glmmTMB( cbind(AnnualPineDamage, UndamagedPine)  ~         
                            MoosePellets_sc +
                            CoordNorth_sc +
                            (1 |   mmaID),
                          data = dat, 
                          ziformula = ~ 1 + (1 | mmaID ),
                          family = binomial,
                          REML = TRUE)
                          
summary(mma.predicted)
predict(mma.predicted)

?predict
# this is a function to minmax numeric vectors - shooootz

minmax <- function(coln) {
  dmin <- min(coln)
  dmax <- max(coln)
  
  minmaxed <- (coln - dmin) / (dmax-dmin)
  minmaxed
}


# storing predicted values and ranging them since they're negative

dat [ , "predicted_damage" ] <- minmax(predict(mma.predicted)) # added a column with predicted browsing damages

hist(leveldamagepredicted$mean_predictedDamage)
leveldamagepredicted <-dat[, .(mean_predictedDamage = mean(predicted_damage)), by=mmaID]

write.csv(leveldamagepredicted, file="leveldamagepredicted.csv")

