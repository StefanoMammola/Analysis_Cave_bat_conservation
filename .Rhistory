b     = NULL,
ci.lb = NULL,
ci.ub = NULL,
ES    = NULL,
L     = NULL,
U     = NULL)
# Modelling
for (j in 1:length(actions_to_analyse)){
data_j  <- db_metafor[db_metafor$Predictor_Group == actions_to_analyse[j], ] ; data_j <- droplevels(data_j)
predictors_to_analyse <- levels(data_j$Response_Group)
for (i in 1:length(predictors_to_analyse)){
#subset the predictor
data_i  <- data_j[data_j$Response_Group == predictors_to_analyse[i], ]
if(nrow(data_i)<2) { NULL } else {
#fitting the model
model_i <- rma.mv(yi, vi, random =  ~ 1 | ID, data = na.omit(data_i))
#extracting coefficients
result_for_plot_i <- data.frame(label_action =  actions_to_analyse[j],
label_pred = paste(predictors_to_analyse[i]," (" ,
nrow(data_i),", ",
length(unique(data_i$ID)),")",sep=''),
size = length(unique(data_i$ID)),
b     = model_i$b,
ci.lb = model_i$ci.lb,
ci.ub = model_i$ci.ub,
ES    = ((exp(model_i$b)-1))/((exp(model_i$b)+1)),
L     = ((exp(model_i$ci.lb)-1)/(exp(model_i$ci.lb)+1)),
U     = ((exp(model_i$ci.ub)-1)/(exp(model_i$ci.ub)+1)))
#store the data
SUBSET[[i]]     <- data_i
MODEL[[i]]      <- model_i
result_for_plot <- rbind(result_for_plot,result_for_plot_i)
}}
}
rownames(result_for_plot) <- NULL
ORDER <- as.character(result_for_plot$label_pred)
result_for_plot$label_pred <- factor(result_for_plot$label_pred, ORDER) #sort
#Converting multiple families as multiple
genus_split <- strsplit(as.character(db_metafor$Genus_specific), ";")
genus <- c()
for(i in 1:length(family_split))
genus <- c(genus, ifelse(length(genus_split[[i]]) > 1, "Multiple", genus_split[[i]]) )
#Converting multiple families as multiple
genus_split <- strsplit(as.character(db_metafor$Genus_specific), ";")
genus <- c()
for(i in 1:length(genus_split))
genus <- c(genus, ifelse(length(genus_split[[i]]) > 1, "Multiple", genus_split[[i]]) )
db_metafor$Genus_specific <- genus
new_name <- factor(paste(db_metafor$Predictor_Group, db_metafor$Response_Group))
levels(new_name) <- ORDER
db_metafor <- data.frame(db_metafor,new_name)
colnames(db_metafor)
Predictor_Group
db_metafor$Predictor_Group
(meta_analysis <- ggplot(data= result_for_plot) +
geom_hline(yintercept = 0, lty = 2, col = "grey50") +  # add a dotted line at x=1 after flip
xlab("")+
ylab("Effect size [r]")+
geom_jitter(data = db_metafor, aes(x = new_name, y = r, shape = Genus_specific, col = Predictor_Group),
size = 1.5, width = 0.2, aplha =0.8)+
geom_pointrange(aes(x=label_pred, y=ES, ymin=L, ymax=U, col= label_action), size = 1) +
scale_color_manual("Conservation action", values = c("darkmagenta","grey10","darkcyan", "darkorange", "blue"))+
scale_shape_manual("Taxon", values = c(1,2,3))+
coord_flip() +
theme_custom() + theme(legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 12, face = "bold"),
axis.text.y = element_text(face= c("plain","bold","plain","bold","plain")))) # flip coordinates (puts labels on y axis)
(meta_analysis <- ggplot(data= result_for_plot) +
geom_hline(yintercept = 0, lty = 2, col = "grey50") +  # add a dotted line at x=1 after flip
xlab("")+
ylab("Effect size [r]")+
geom_jitter(data = db_metafor, aes(x = new_name, y = r, shape = Genus_specific, col = Predictor_Group),
size = 1.5, width = 0.2, aplha =0.8)+
geom_pointrange(aes(x=label_pred, y=ES, ymin=L, ymax=U, col= label_action), size = 1) +
scale_color_manual("Conservation action", values = c("darkmagenta","grey10","darkcyan", "darkorange", "blue"))+
scale_shape_manual("Taxon", values = c(1,2,3))+
coord_flip() +
theme_custom() + theme(legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 12, face = "bold"),
axis.text.y = element_text(face= c("plain","bold","plain","bold","plain", "plain", "plain", "plain")))) # flip coordinates (puts labels on y axis)
(meta_analysis <- ggplot(data= result_for_plot) +
geom_hline(yintercept = 0, lty = 2, col = "grey50") +  # add a dotted line at x=1 after flip
xlab("")+
ylab("Effect size [r]")+
geom_jitter(data = db_metafor, aes(x = new_name, y = r, shape = Genus_specific, col = Predictor_Group),
size = 1.5, width = 0.2, aplha =0.8)+
geom_pointrange(aes(x=label_pred, y=ES, ymin=L, ymax=U, col= label_action), size = 1) +
# scale_color_manual("Conservation action", values = c("darkmagenta","grey10","darkcyan", "darkorange", "blue"))+
# scale_shape_manual("Taxon", values = c(1,2,3))+
coord_flip() +
theme_custom() + theme(legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 12, face = "bold"),
axis.text.y = element_text(face= c("plain","bold","plain","bold","plain", "plain", "plain", "plain")))) # flip coordinates (puts labels on y axis)
(meta_analysis <- ggplot(data= result_for_plot) +
geom_hline(yintercept = 0, lty = 2, col = "grey50") +  # add a dotted line at x=1 after flip
xlab("")+
ylab("Effect size [r]")+
geom_jitter(data = db_metafor, aes(x = new_name, y = r, shape = Genus_specific, col = Predictor_Group),
size = 1.5, width = 0.2, aplha =0.8)+
geom_pointrange(aes(x=label_pred, y=ES, ymin=L, ymax=U, col= label_action), size = 1) +
scale_color_manual("Conservation action", values = c("darkmagenta","grey10","darkcyan", "darkorange", "blue"))+
# scale_shape_manual("Taxon", values = c(1,2,3))+
coord_flip() +
theme_custom() + theme(legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 12, face = "bold"),
axis.text.y = element_text(face= c("plain","bold","plain","bold","plain", "plain", "plain", "plain")))) # flip coordinates (puts labels on y axis)
(meta_analysis <- ggplot(data= result_for_plot) +
geom_hline(yintercept = 0, lty = 2, col = "grey50") +  # add a dotted line at x=1 after flip
xlab("")+
ylab("Effect size [r]")+
geom_jitter(data = db_metafor, aes(x = new_name, y = r, shape = Genus_specific, col = Predictor_Group),
size = 1.5, width = 0.2, aplha =0.8)+
geom_pointrange(aes(x=label_pred, y=ES, ymin=L, ymax=U, col= label_action), size = 1) +
scale_color_manual("Conservation action", values = c("darkmagenta","grey10","darkcyan", "darkorange", "blue"))+
# scale_shape_manual("Taxon", values = c(1,2,3))+
coord_flip() +
theme_custom() + theme(legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 12, face = "bold"),
axis.text.y = element_text(face= c("plain","plain","bold","plain","bold", "plain", "plain")))) # flip coordinates (puts labels on y axis)
levels(db_metafor$Genus_specific)
table(db_metafor$Genus_specific)
(meta_analysis <- ggplot(data= result_for_plot) +
geom_hline(yintercept = 0, lty = 2, col = "grey50") +  # add a dotted line at x=1 after flip
xlab("")+
ylab("Effect size [r]")+
geom_jitter(data = db_metafor, aes(x = new_name, y = r, shape = Genus_specific, col = Predictor_Group),
size = 1.5, width = 0.2, aplha =0.8)+
geom_pointrange(aes(x=label_pred, y=ES, ymin=L, ymax=U, col= label_action), size = 1) +
scale_color_manual("Conservation action", values = c("darkmagenta","grey10","darkcyan", "darkorange", "blue"))+
scale_shape_manual("Taxon", values = c(1:8))+
coord_flip() +
theme_custom() + theme(legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 12, face = "bold"),
axis.text.y = element_text(face= c("plain","plain","bold","plain","bold", "plain", "plain")))) # flip coordinates (puts labels on y axis)
(meta_analysis <- ggplot(data= result_for_plot) +
geom_hline(yintercept = 0, lty = 2, col = "grey50") +  # add a dotted line at x=1 after flip
xlab("")+
ylab("Effect size [r]")+
geom_jitter(data = db_metafor, aes(x = new_name, y = r, shape = Genus_specific, col = Predictor_Group),
size = 1.5, width = 0.2, aplha =0.8)+
geom_flat_violin(position = position_nudge(x = 0.2, y = 0),
alpha = 0.4, fill= "blue", col = "white", adjust = 1.5) +
geom_pointrange(aes(x=label_pred, y=ES, ymin=L, ymax=U, col= label_action), size = 1) +
scale_color_manual("Conservation action", values = c("darkmagenta","grey10","darkcyan", "darkorange", "blue"))+
scale_shape_manual("Taxon", values = c(1:8))+
coord_flip() +
theme_custom() + theme(legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 12, face = "bold"),
axis.text.y = element_text(face= c("plain","plain","bold","plain","bold", "plain", "plain")))) # flip coordinates (puts labels on y axis)
library("PupillometryR")
(meta_analysis <- ggplot(data= result_for_plot) +
geom_hline(yintercept = 0, lty = 2, col = "grey50") +  # add a dotted line at x=1 after flip
xlab("")+
ylab("Effect size [r]")+
geom_jitter(data = db_metafor, aes(x = new_name, y = r, shape = Genus_specific, col = Predictor_Group),
size = 1.5, width = 0.2, aplha =0.8)+
geom_flat_violin(position = position_nudge(x = 0.2, y = 0),
alpha = 0.4, fill= "blue", col = "white", adjust = 1.5) +
geom_pointrange(aes(x=label_pred, y=ES, ymin=L, ymax=U, col= label_action), size = 1) +
scale_color_manual("Conservation action", values = c("darkmagenta","grey10","darkcyan", "darkorange", "blue"))+
scale_shape_manual("Taxon", values = c(1:8))+
coord_flip() +
theme_custom() + theme(legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 12, face = "bold"),
axis.text.y = element_text(face= c("plain","plain","bold","plain","bold", "plain", "plain")))) # flip coordinates (puts labels on y axis)
(meta_analysis <- ggplot(data= result_for_plot) +
geom_hline(yintercept = 0, lty = 2, col = "grey50") +  # add a dotted line at x=1 after flip
xlab("")+
ylab("Effect size [r]")+
geom_jitter(data = db_metafor, aes(x = new_name, y = r, shape = Genus_specific, col = Predictor_Group),
size = 1.5, width = 0.2, aplha =0.8)+
geom_flat_violin(data = db_metafor, aes(x = r, fill = Predictor_Group),
position = position_nudge(x = 0.2, y = 0),
alpha = 0.4, col = "white", adjust = 1.5) +
geom_pointrange(aes(x=label_pred, y=ES, ymin=L, ymax=U, col= label_action), size = 1) +
scale_color_manual("Conservation action", values = c("darkmagenta","grey10","darkcyan", "darkorange", "blue"))+
scale_shape_manual("Taxon", values = c(1:8))+
coord_flip() +
theme_custom() + theme(legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 12, face = "bold"),
axis.text.y = element_text(face= c("plain","plain","bold","plain","bold", "plain", "plain")))) # flip coordinates (puts labels on y axis)
(meta_analysis <- ggplot(data= result_for_plot) +
geom_hline(yintercept = 0, lty = 2, col = "grey50") +  # add a dotted line at x=1 after flip
xlab("")+
ylab("Effect size [r]")+
geom_jitter(data = db_metafor, aes(x = new_name, y = r, shape = Genus_specific, col = Predictor_Group),
size = 1.5, width = 0.2, aplha =0.8)+
geom_flat_violin(data = db_metafor, aes(y = r, fill = Predictor_Group),
position = position_nudge(x = 0.2, y = 0),
alpha = 0.4, col = "white", adjust = 1.5) +
geom_pointrange(aes(x=label_pred, y=ES, ymin=L, ymax=U, col= label_action), size = 1) +
scale_color_manual("Conservation action", values = c("darkmagenta","grey10","darkcyan", "darkorange", "blue"))+
scale_shape_manual("Taxon", values = c(1:8))+
coord_flip() +
theme_custom() + theme(legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 12, face = "bold"),
axis.text.y = element_text(face= c("plain","plain","bold","plain","bold", "plain", "plain")))) # flip coordinates (puts labels on y axis)
(meta_analysis <- ggplot(data= result_for_plot) +
geom_hline(yintercept = 0, lty = 2, col = "grey50") +  # add a dotted line at x=1 after flip
xlab("")+
ylab("Effect size [r]")+
geom_jitter(data = db_metafor, aes(x = new_name, y = r, shape = Genus_specific, col = Predictor_Group),
size = 1.5, width = 0.2, aplha =0.8)+
geom_flat_violin(data = db_metafor, aes(x = new_name, y = r, fill = Predictor_Group),
position = position_nudge(x = 0.2, y = 0),
alpha = 0.4, col = "white", adjust = 1.5) +
geom_pointrange(aes(x=label_pred, y=ES, ymin=L, ymax=U, col= label_action), size = 1) +
scale_color_manual("Conservation action", values = c("darkmagenta","grey10","darkcyan", "darkorange", "blue"))+
scale_shape_manual("Taxon", values = c(1:8))+
coord_flip() +
theme_custom() + theme(legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 12, face = "bold"),
axis.text.y = element_text(face= c("plain","plain","bold","plain","bold", "plain", "plain")))) # flip coordinates (puts labels on y axis)
library("PupillometryR")
(meta_analysis <- ggplot(data= result_for_plot) +
geom_hline(yintercept = 0, lty = 2, col = "grey50") +  # add a dotted line at x=1 after flip
xlab("")+
ylab("Effect size [r]")+
geom_jitter(data = db_metafor, aes(x = new_name, y = r, shape = Genus_specific, col = Predictor_Group),
size = 1.5, width = 0.2, aplha =0.8)+
geom_flat_violin(data = db_metafor, aes(x = new_name, y = r, fill = Predictor_Group),
position = position_nudge(x = 0.3, y = 0),
col = "white", adjust = 1.5) +
geom_pointrange(aes(x=label_pred, y=ES, ymin=L, ymax=U, col= label_action), size = 1) +
scale_color_manual("Conservation action", values = c("darkmagenta","grey10","darkcyan", "darkorange", "blue"))+
scale_shape_manual("Taxon", values = c(1:8))+
coord_flip() +
theme_custom() + theme(legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 12, face = "bold"),
axis.text.y = element_text(face= c("plain","plain","bold","plain","bold", "plain", "plain")))) # flip coordinates (puts labels on y axis)
(meta_analysis <- ggplot(data= result_for_plot) +
geom_hline(yintercept = 0, lty = 2, col = "grey50") +  # add a dotted line at x=1 after flip
xlab("")+
ylab("Effect size [r]")+
geom_jitter(data = db_metafor, aes(x = new_name, y = r, shape = Genus_specific, col = Predictor_Group),
size = 1.5, width = 0.2, aplha =0.8)+
geom_flat_violin(data = db_metafor, aes(x = new_name, y = r),
position = position_nudge(x = 0.3, y = 0),
col = "white", adjust = 1.5) +
geom_pointrange(aes(x=label_pred, y=ES, ymin=L, ymax=U, col= label_action), size = 1) +
scale_color_manual("Conservation action", values = c("darkmagenta","grey10","darkcyan", "darkorange", "blue"))+
scale_shape_manual("Taxon", values = c(1:8))+
coord_flip() +
theme_custom() + theme(legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 12, face = "bold"),
axis.text.y = element_text(face= c("plain","plain","bold","plain","bold", "plain", "plain")))) # flip coordinates (puts labels on y axis)
(meta_analysis <- ggplot(data= result_for_plot) +
geom_hline(yintercept = 0, lty = 2, col = "grey50") +  # add a dotted line at x=1 after flip
xlab("")+
ylab("Effect size [r]")+
geom_jitter(data = db_metafor, aes(x = new_name, y = r, shape = Genus_specific, col = Predictor_Group),
size = 1.5, width = 0.2, aplha =0.8)+
geom_flat_violin(data = db_metafor, aes(x = new_name, y = r),
position = position_nudge(x = 0.3, y = 0),
col = "white", adjust = 1.5) +
geom_pointrange(aes(x=label_pred, y=ES, ymin=L, ymax=U, col= label_action), size = 1) +
scale_color_manual("Conservation action", values = c("darkmagenta","grey10","darkcyan", "darkorange", "blue"))+
scale_shape_manual("Taxon", values = c(1:8))+
coord_flip() +
theme_custom() + theme(legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 12, face = "bold"),
axis.text.y = element_text(face= c("plain","plain","bold","plain","bold", "plain", "plain")))) # flip coordinates (puts labels on y axis)
(meta_analysis <- ggplot(data= result_for_plot) +
geom_hline(yintercept = 0, lty = 2, col = "grey50") +  # add a dotted line at x=1 after flip
xlab("")+
ylab("Effect size [r]")+
geom_jitter(data = db_metafor, aes(x = new_name, y = r, shape = Genus_specific, col = Predictor_Group),
size = 1.5, width = 0.2, aplha =0.8)+
geom_flat_violin(data = db_metafor, aes(x = new_name, y = r),
position = position_nudge(x = 0.1, y = 0),
col = "white", adjust = 1.5) +
geom_pointrange(aes(x=label_pred, y=ES, ymin=L, ymax=U, col= label_action), size = 1) +
scale_color_manual("Conservation action", values = c("darkmagenta","grey10","darkcyan", "darkorange", "blue"))+
scale_shape_manual("Taxon", values = c(1:8))+
coord_flip() +
theme_custom() + theme(legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 12, face = "bold"),
axis.text.y = element_text(face= c("plain","plain","bold","plain","bold", "plain", "plain")))) # flip coordinates (puts labels on y axis)
(meta_analysis <- ggplot(data= result_for_plot) +
geom_hline(yintercept = 0, lty = 2, col = "grey50") +  # add a dotted line at x=1 after flip
xlab("")+
ylab("Effect size [r]")+
geom_jitter(data = db_metafor, aes(x = new_name, y = r, shape = Genus_specific, col = Predictor_Group),
size = 1.5, width = 0.2, aplha =0.8)+
geom_flat_violin(data = db_metafor, aes(x = new_name, y = r),
position = position_nudge(x = 0.1, y = 1),
col = "white", adjust = 1.5) +
geom_pointrange(aes(x=label_pred, y=ES, ymin=L, ymax=U, col= label_action), size = 1) +
scale_color_manual("Conservation action", values = c("darkmagenta","grey10","darkcyan", "darkorange", "blue"))+
scale_shape_manual("Taxon", values = c(1:8))+
coord_flip() +
theme_custom() + theme(legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 12, face = "bold"),
axis.text.y = element_text(face= c("plain","plain","bold","plain","bold", "plain", "plain")))) # flip coordinates (puts labels on y axis)
(meta_analysis <- ggplot(data= result_for_plot) +
geom_hline(yintercept = 0, lty = 2, col = "grey50") +  # add a dotted line at x=1 after flip
xlab("")+
ylab("Effect size [r]")+
geom_jitter(data = db_metafor, aes(x = new_name, y = r, shape = Genus_specific, col = Predictor_Group),
size = 1.5, width = 0.2, aplha =0.8)+
geom_flat_violin(data = db_metafor, aes(x = new_name, y = r),
position = position_nudge(x = 0.1, y = 0),
adjust = 1.5) +
geom_pointrange(aes(x=label_pred, y=ES, ymin=L, ymax=U, col= label_action), size = 1) +
scale_color_manual("Conservation action", values = c("darkmagenta","grey10","darkcyan", "darkorange", "blue"))+
scale_shape_manual("Taxon", values = c(1:8))+
coord_flip() +
theme_custom() + theme(legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 12, face = "bold"),
axis.text.y = element_text(face= c("plain","plain","bold","plain","bold", "plain", "plain")))) # flip coordinates (puts labels on y axis)
(meta_analysis <- ggplot(data= result_for_plot) +
geom_hline(yintercept = 0, lty = 2, col = "grey50") +  # add a dotted line at x=1 after flip
xlab("")+
ylab("Effect size [r]")+
geom_jitter(data = db_metafor, aes(x = new_name, y = r, shape = Genus_specific, col = Predictor_Group),
size = 1.5, width = 0.2, aplha =0.8)+
geom_flat_violin(data = db_metafor, aes(x = new_name, y = r),
position = position_nudge(x = 0.5, y = 0),
adjust = 1.5) +
geom_pointrange(aes(x=label_pred, y=ES, ymin=L, ymax=U, col= label_action), size = 1) +
scale_color_manual("Conservation action", values = c("darkmagenta","grey10","darkcyan", "darkorange", "blue"))+
scale_shape_manual("Taxon", values = c(1:8))+
coord_flip() +
theme_custom() + theme(legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 12, face = "bold"),
axis.text.y = element_text(face= c("plain","plain","bold","plain","bold", "plain", "plain")))) # flip coordinates (puts labels on y axis)
library("PupillometryR")
(meta_analysis <- ggplot(data= result_for_plot) +
geom_hline(yintercept = 0, lty = 2, col = "grey50") +  # add a dotted line at x=1 after flip
xlab("")+
ylab("Effect size [r]")+
geom_jitter(data = db_metafor, aes(x = new_name, y = r, shape = Genus_specific, col = Predictor_Group),
size = 1.5, width = 0.2, aplha =0.8)+
geom_flat_violin(data = db_metafor, aes(x = new_name, y = r),
position = position_nudge(x = 0.5, y = 2),
adjust = 1.5) +
geom_pointrange(aes(x=label_pred, y=ES, ymin=L, ymax=U, col= label_action), size = 1) +
scale_color_manual("Conservation action", values = c("darkmagenta","grey10","darkcyan", "darkorange", "blue"))+
scale_shape_manual("Taxon", values = c(1:8))+
coord_flip() +
theme_custom() + theme(legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 12, face = "bold"),
axis.text.y = element_text(face= c("plain","plain","bold","plain","bold", "plain", "plain")))) # flip coordinates (puts labels on y axis)
(meta_analysis <- ggplot(data= result_for_plot) +
geom_hline(yintercept = 0, lty = 2, col = "grey50") +  # add a dotted line at x=1 after flip
xlab("")+
ylab("Effect size [r]")+
geom_jitter(data = db_metafor, aes(x = new_name, y = r, shape = Genus_specific, col = Predictor_Group),
size = 1.5, width = 0.2, aplha =0.8)+
geom_flat_violin(data = db_metafor, aes(x = new_name, y = r),
position = position_nudge(x = 0, y = 0),
adjust = 1.5) +
geom_pointrange(aes(x=label_pred, y=ES, ymin=L, ymax=U, col= label_action), size = 1) +
scale_color_manual("Conservation action", values = c("darkmagenta","grey10","darkcyan", "darkorange", "blue"))+
scale_shape_manual("Taxon", values = c(1:8))+
coord_flip() +
theme_custom() + theme(legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 12, face = "bold"),
axis.text.y = element_text(face= c("plain","plain","bold","plain","bold", "plain", "plain")))) # flip coordinates (puts labels on y axis)
(meta_analysis <- ggplot(data= result_for_plot) +
geom_hline(yintercept = 0, lty = 2, col = "grey50") +  # add a dotted line at x=1 after flip
xlab("")+
ylab("Effect size [r]")+
geom_jitter(data = db_metafor, aes(x = new_name, y = r, shape = Genus_specific, col = Predictor_Group),
size = 1.5, width = 0.2, aplha =0.8)+
geom_pointrange(aes(x=label_pred, y=ES, ymin=L, ymax=U, col= label_action), size = 1) +
scale_color_manual("Conservation action", values = c("darkmagenta","grey10","darkcyan", "darkorange", "blue"))+
scale_shape_manual("Taxon", values = c(1:8))+
coord_flip() +
theme_custom() + theme(legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 12, face = "bold"),
axis.text.y = element_text(face= c("plain","plain","bold","plain","bold", "plain", "plain")))) # flip coordinates (puts labels on y axis)
#Save figure
pdf(file = "Figure/Meta_analysis.pdf", width = 9, height =5)
meta_analysis
dev.off()
plot_r <- semi_colon_splitter(input1 = db_metafor$Family,
input2 = db_metafor$r,
names = c("Species","r"))
plot_r$r <- as.numeric(as.character(plot_r$r))
ggplot(data = plot_r, aes(x=1, y = r))+
geom_boxplot()+
geom_point(aes(fill = Species), posiion = "jitter",size = 2, alpha = 0.8, pch = 21)+
scale_fill_manual(values = c("darkmagenta","grey10","darkcyan")) +
theme_custom()
COL =  c("grey20","darkorange")
COL =  c("grey20","darkorange")
geo_action <- semi_colon_splitter3(input1 = db$Higher_Geography,
input2 = db$Conservation_Action,
input3 = db$Tested_statistically,
names = c("Geography","Action","Test"))
geo_action <- na.omit(geo_action)
bar_1 <- data.frame(table(geo_action$Geography,geo_action$Action,geo_action$Test))
colnames(bar_1) <- c("geo","action","test","N")
bar_1 <- bar_1[bar_1$geo != "Global",] ; bar_1 <- droplevels(bar_1)
bar_1$action <- factor(bar_1$action,levels =
c("Assessment", "Education","Legislation","Monitoring","Prioritization",
"Risk assessment",
"Decontamination","Eradication","Gating",
"Habitat creation","Habitat restoration",
"Protected area",  "Regulate access"
))
(bar_p1 <-  ggplot(bar_1, aes(x = action,y = N, fill = test)) +
facet_wrap( ~ geo, nrow = 2, ncol = 3) +
geom_bar(stat="identity",position= "stack", color = "grey10")+
scale_fill_manual("",labels=c("Not tested", "Tested"),values = COL)+
labs(title=NULL, subtitle = NULL,x=NULL, y = "Frequency")+
geom_vline(xintercept = 6.5, linetype="dotted",
color = "grey40", size=0.4)+
theme_custom()+
theme(legend.position =  "bottom",
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
plot.margin = unit(c(0.2,0.2,0.2,0.2), 'cm'),
strip.text.x=element_text(color = "grey10", face = "bold", size=12),
strip.background = element_rect(colour=NA, fill=NA)
)
)
COL =  c("grey20","darkorange")
geo_action <- semi_colon_splitter3(input1 = db$Higher_Geography,
input2 = db$Conservation_Action,
input3 = db$Tested_statistically,
names = c("Geography","Action","Test"))
geo_action <- na.omit(geo_action)
bar_1 <- data.frame(table(geo_action$Geography,geo_action$Action,geo_action$Test))
bar_1
colnames(bar_1) <- c("geo","action","test","N")
bar_1 <- bar_1[bar_1$geo != "Global",] ; bar_1 <- droplevels(bar_1)
bar_1$action <- factor(bar_1$action,levels =
c("Assessment", "Education","Legislation","Monitoring","Prioritization",
"Risk assessment",
"Decontamination","Eradication","Gating",
"Habitat creation","Habitat restoration",
"Protected area",  "Regulate access"
))
(bar_p1 <-  ggplot(bar_1, aes(x = action,y = N, fill = test)) +
facet_wrap( ~ geo, nrow = 2, ncol = 3) +
geom_bar(stat="identity",position= "stack", color = "grey10")+
scale_fill_manual("",labels=c("Not tested", "Tested"),values = COL)+
labs(title=NULL, subtitle = NULL,x=NULL, y = "Frequency")+
geom_vline(xintercept = 6.5, linetype="dotted",
color = "grey40", size=0.4)+
theme_custom()+
theme(legend.position =  "bottom",
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
plot.margin = unit(c(0.2,0.2,0.2,0.2), 'cm'),
strip.text.x=element_text(color = "grey10", face = "bold", size=12),
strip.background = element_rect(colour=NA, fill=NA)
)
)
bar_1$test
bar_1$test <- drop.levels(bar_1$test)
bar_1$action <- factor(bar_1$action,levels =
c("Assessment", "Education","Legislation","Monitoring","Prioritization",
"Risk assessment",
"Decontamination","Eradication","Gating",
"Habitat creation","Habitat restoration",
"Protected area",  "Regulate access"
))
(bar_p1 <-  ggplot(bar_1, aes(x = action,y = N, fill = test)) +
facet_wrap( ~ geo, nrow = 2, ncol = 3) +
geom_bar(stat="identity",position= "stack", color = "grey10")+
scale_fill_manual("",labels=c("Not tested", "Tested"),values = COL)+
labs(title=NULL, subtitle = NULL,x=NULL, y = "Frequency")+
geom_vline(xintercept = 6.5, linetype="dotted",
color = "grey40", size=0.4)+
theme_custom()+
theme(legend.position =  "bottom",
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
plot.margin = unit(c(0.2,0.2,0.2,0.2), 'cm'),
strip.text.x=element_text(color = "grey10", face = "bold", size=12),
strip.background = element_rect(colour=NA, fill=NA)
)
)
pdf(file = "Figure/Conservation_measures.pdf", width = 12, height = 7)
bar_1$test
(bar_p1 <-  ggplot(bar_1, aes(x = action,y = N, fill = test)) +
facet_wrap( ~ geo, nrow = 2, ncol = 3) +
geom_bar(stat="identity",position= "stack", color = "grey10")+
#scale_fill_manual("",labels=c("Not tested", "Tested"),values = COL)+
labs(title=NULL, subtitle = NULL,x=NULL, y = "Frequency")+
geom_vline(xintercept = 6.5, linetype="dotted",
color = "grey40", size=0.4)+
theme_custom()+
theme(legend.position =  "bottom",
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
plot.margin = unit(c(0.2,0.2,0.2,0.2), 'cm'),
strip.text.x=element_text(color = "grey10", face = "bold", size=12),
strip.background = element_rect(colour=NA, fill=NA)
)
)
bar_p1
